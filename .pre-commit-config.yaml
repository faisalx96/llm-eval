repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
        exclude: '\.md$'
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        files: '^(llm_eval|tests|scripts)/.*\.py$'

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        files: '^(llm_eval|tests|scripts)/.*\.py$'

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        files: '^(llm_eval|tests|scripts)/.*\.py$'
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        files: '^llm_eval/.*\.py$'
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-r, llm_eval, -f, json, -o, bandit-report.json]
        files: '^llm_eval/.*\.py$'
        exclude: 'tests/.*'

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '\.ipynb$|package-lock\.json$'

  # Python dependency security
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: setup.py

  # JavaScript/TypeScript (Frontend)
  - repo: local
    hooks:
      - id: eslint
        name: eslint
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        files: '^frontend/.*\.(js|jsx|ts|tsx)$'
        pass_filenames: false

      - id: prettier
        name: prettier
        entry: bash -c 'cd frontend && npm run format:check'
        language: system
        files: '^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$'
        pass_filenames: false

      - id: tsc
        name: TypeScript Compiler
        entry: bash -c 'cd frontend && npm run type-check'
        language: system
        files: '^frontend/.*\.(ts|tsx)$'
        pass_filenames: false

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        files: '^llm_eval/.*\.py$'
        args: [--convention=google]

  # Jupyter notebooks
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        files: '\.ipynb$'
        args: [--line-length=88]
      - id: nbqa-isort
        files: '\.ipynb$'
        args: [--profile=black]
      - id: nbqa-flake8
        files: '\.ipynb$'
        args: [--max-line-length=88, --extend-ignore=E203,W503,F401]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: '^\.github/.*\.yml$'  # Skip GitHub Actions files

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: [--ignore, DL3008, --ignore, DL3009]  # Ignore apt-get version pinning

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        files: '\.sh$'

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Global configuration
default_install_hook_types: [pre-commit, commit-msg, pre-push]
default_stages: [commit]

# Performance optimizations
minimum_pre_commit_version: 3.6.0