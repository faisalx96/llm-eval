apiVersion: v1
kind: Secret
metadata:
  name: llm-eval-secrets
  namespace: llm-eval
  labels:
    app.kubernetes.io/name: llm-eval
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "REPLACE_WITH_SECURE_PASSWORD"
  DATABASE_URL: "postgresql://llm_eval:REPLACE_WITH_SECURE_PASSWORD@postgres:5432/llm_eval"
  
  # Redis credentials
  REDIS_PASSWORD: "REPLACE_WITH_SECURE_REDIS_PASSWORD"
  REDIS_URL: "redis://:REPLACE_WITH_SECURE_REDIS_PASSWORD@redis:6379/0"
  
  # Application secrets
  SECRET_KEY: "REPLACE_WITH_SECURE_SECRET_KEY_MIN_32_CHARS"
  
  # Langfuse credentials
  LANGFUSE_SECRET_KEY: "REPLACE_WITH_LANGFUSE_SECRET_KEY"
  LANGFUSE_PUBLIC_KEY: "REPLACE_WITH_LANGFUSE_PUBLIC_KEY"
  
  # External service credentials (optional)
  SENTRY_DSN: "REPLACE_WITH_SENTRY_DSN"

---
apiVersion: v1
kind: Secret
metadata:
  name: llm-eval-tls
  namespace: llm-eval
  labels:
    app.kubernetes.io/name: llm-eval
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate
  tls.crt: LS0tLS1CRUdJTi4uLg==
  # Base64 encoded TLS private key  
  tls.key: LS0tLS1CRUdJTi4uLg==

---
# Example: Creating secrets from files using kubectl
# kubectl create secret generic llm-eval-secrets \
#   --from-file=POSTGRES_PASSWORD=./secrets/postgres_password.txt \
#   --from-file=SECRET_KEY=./secrets/secret_key.txt \
#   --from-file=LANGFUSE_SECRET_KEY=./secrets/langfuse_secret_key.txt \
#   --namespace=llm-eval

# kubectl create secret tls llm-eval-tls \
#   --cert=./ssl/cert.pem \
#   --key=./ssl/key.pem \
#   --namespace=llm-eval